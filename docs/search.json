[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R-shinylive app in Quarto!",
    "section": "",
    "text": "Code\n##| standalone: true\n##| viewerHeight: 100\n\n# ```{shinylive-r}\n\nlibrary(shiny)\nlibrary(bslib)\n\nui &lt;- page_sidebar(\n  sidebar = sidebar(\n    sliderInput(\"mySlider\", \n                \"Select a Value\", \n                min = 0, \n                max = 100, \n                value = 50)\n  ),\n  card(\n    card_header(\"Slider Value\"),\n    textOutput(\"sliderValue\")\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  output$sliderValue &lt;- renderText({\n    paste(\"Current Slider Value:\", input$mySlider)\n  })\n}\n\nshinyApp(ui, server)\n\n\n\nAction Plan Creation Task- Davis Family Electricity Reduction\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 650\nlibrary(shiny)\nlibrary(bslib)\n\nui &lt;- page_fluid(\n  theme = bs_theme(version = 5, bootswatch = \"flatly\"),\n  tags$head(\n    tags$style(HTML(\"\n      .table-bordered {\n        border: 1px solid #dee2e6;\n      }\n      .table-bordered th, \n      .table-bordered td {\n        border: 1px solid #dee2e6;\n        text-align: center;\n        vertical-align: middle;\n      }\n      .irs-bar,\n      .irs-bar-edge,\n      .irs-single,\n      .irs-grid-pol {\n        background: black;\n        border-color: black;\n      }\n      .irs-from, .irs-to, .irs-single {\n        background: black;\n        color: white;\n      }\n    \"))\n  ),\n  \n  h2(\"Action Plan Creation - Davis Family Electricity Reduction\"),\n  \n  fluidRow(\n    column(12,\n      tags$table(class = \"table table-bordered\",\n        tags$thead(\n          tags$tr(\n            tags$th(\"Category\"),\n            tags$th(\"Last Year (Davis Family)\"),\n            tags$th(\"Massachusetts Average\"),\n            tags$th(\"Action Plan 1\"),\n            tags$th(\"Action Plan 2\")\n          )\n        ),\n        tags$tbody(\n          # Cooling\n          tags$tr(\n            tags$td(\"Cooling (Central A/C)\"),\n            tags$td(\"419\"),\n            tags$td(\"322\"),\n            tags$td(\n              sliderInput(\"cooling_plan1\", NULL, \n                          min = 0, max = 419, \n                          value = 419, step = 1)\n            ),\n            tags$td(\n              sliderInput(\"cooling_plan2\", NULL, \n                          min = 0, max = 419, \n                          value = 419, step = 1)\n            )\n          ),\n          # Heating\n          tags$tr(\n            tags$td(\"Heating the Home\"),\n            tags$td(\"26,751\"),\n            tags$td(\"19,108\"),\n            tags$td(\n              sliderInput(\"heating_plan1\", NULL, \n                          min = 0, max = 26751, \n                          value = 26751, step = 1)\n            ),\n            tags$td(\n              sliderInput(\"heating_plan2\", NULL, \n                          min = 0, max = 26751, \n                          value = 26751, step = 1)\n            )\n          ),\n          # Water Heating\n          tags$tr(\n            tags$td(\"Water Heating\"),\n            tags$td(\"10,543\"),\n            tags$td(\"5,070\"),\n            tags$td(\n              sliderInput(\"water_plan1\", NULL, \n                          min = 0, max = 10543, \n                          value = 10543, step = 1)\n            ),\n            tags$td(\n              sliderInput(\"water_plan2\", NULL, \n                          min = 0, max = 10543, \n                          value = 10543, step = 1)\n            )\n          ),\n          # Refrigerator\n          tags$tr(\n            tags$td(\"Refrigerator\"),\n            tags$td(\"1,230\"),\n            tags$td(\"1,025\"),\n            tags$td(\n              sliderInput(\"fridge_plan1\", NULL, \n                          min = 0, max = 1230, \n                          value = 1230, step = 1)\n            ),\n            tags$td(\n              sliderInput(\"fridge_plan2\", NULL, \n                          min = 0, max = 1230, \n                          value = 1230, step = 1)\n            )\n          ),\n          # Other\n          tags$tr(\n            tags$td(\"Other (TV, Lighting, Electronics, etc.)\"),\n            tags$td(\"7,350\"),\n            tags$td(\"6,682\"),\n            tags$td(\n              sliderInput(\"other_plan1\", NULL, \n                          min = 0, max = 7350, \n                          value = 7350, step = 1)\n            ),\n            tags$td(\n              sliderInput(\"other_plan2\", NULL, \n                          min = 0, max = 7350, \n                          value = 7350, step = 1)\n            )\n          ),\n          # Total Row\n          tags$tr(\n            tags$td(strong(\"Total kWh\")),\n            tags$td(\"46,293\"),\n            tags$td(\"32,207\"),\n            tags$td(strong(textOutput(\"total_plan1\"))),\n            tags$td(strong(textOutput(\"total_plan2\")))\n          )\n        )\n      )\n    )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  # Calculate totals for each plan\n  output$total_plan1 &lt;- renderText({\n    total &lt;- input$cooling_plan1 + \n             input$heating_plan1 + \n             input$water_plan1 + \n             input$fridge_plan1 + \n             input$other_plan1\n    format(total, big.mark = \",\")\n  })\n  \n  output$total_plan2 &lt;- renderText({\n    total &lt;- input$cooling_plan2 + \n             input$heating_plan2 + \n             input$water_plan2 + \n             input$fridge_plan2 + \n             input$other_plan2\n    format(total, big.mark = \",\")\n  })\n}\n\nshinyApp(ui, server)\n\n\n\n\naction plan - alternative\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 700\nlibrary(shiny)\nlibrary(bslib)\nlibrary(DT)\nlibrary(purrr)\n\n# Initial data\ncategories &lt;- c(\n  \"Cooling (Central A/C)\",\n  \"Heating the Home\",\n  \"Water Heating\",\n  \"Refrigerator\",\n  \"Other (Television, Lighting, Electronics, Washer/Dryer, etc.)\"\n)\n\ncurrent_usage &lt;- c(419, 26751, 10543, 1230, 7350)\naverage_usage &lt;- c(322, 19108, 5070, 1025, 6682)\n\nui &lt;- page_sidebar(\n  title = \"Electricity Usage Action Plan Creator\",\n  sidebar = sidebar(\n    title = \"Action Plan Controls\",\n    accordion(\n      accordion_panel(\n        \"Action Plan 1\",\n        map(seq_along(categories), ~{\n          sliderInput(\n            inputId = paste0(\"plan1_\", .x),\n            label = categories[.x],\n            min = average_usage[.x] * 0.5,\n            max = current_usage[.x] * 1.2,\n            value = current_usage[.x],\n            step = 1,\n            width = \"100%\"\n          )\n        })\n      ),\n      accordion_panel(\n        \"Action Plan 2\",\n        map(seq_along(categories), ~{\n          sliderInput(\n            inputId = paste0(\"plan2_\", .x),\n            label = categories[.x],\n            min = average_usage[.x] * 0.5,\n            max = current_usage[.x] * 1.2,\n            value = current_usage[.x],\n            step = 1,\n            width = \"100%\"\n          )\n        })\n      )\n    )\n  ),\n  \n  card(\n    card_header(\"Massachusetts Family Electricity Usage Plans\"),\n    card_body(\n      DTOutput(\"comparison_table\"),\n      hr(),\n      h4(\"Summary\"),\n      textOutput(\"summary_text\")\n    )\n  )\n)\n\nserver &lt;- function(input, output) {\n  # Reactive values for plan totals\n  plan1_total &lt;- reactive({\n    sum(sapply(seq_along(categories), function(i) input[[paste0(\"plan1_\", i)]]))\n  })\n  \n  plan2_total &lt;- reactive({\n    sum(sapply(seq_along(categories), function(i) input[[paste0(\"plan2_\", i)]]))\n  })\n  \n  # Create comparison table\n  output$comparison_table &lt;- renderDT({\n    plan1_values &lt;- sapply(seq_along(categories), function(i) input[[paste0(\"plan1_\", i)]])\n    plan2_values &lt;- sapply(seq_along(categories), function(i) input[[paste0(\"plan2_\", i)]])\n    \n    data.frame(\n      Category = c(categories, \"Total kWh\"),\n      `Current Usage (kWh)` = c(current_usage, sum(current_usage)),\n      `Average Usage (kWh)` = c(average_usage, sum(average_usage)),\n      `Action Plan 1` = c(plan1_values, plan1_total()),\n      `Action Plan 2` = c(plan2_values, plan2_total())\n    ) |&gt;\n      datatable(\n        options = list(\n          dom = 't',\n          ordering = FALSE\n        ),\n        rownames = FALSE\n      )\n  })\n  \n  # Create summary text\n  output$summary_text &lt;- renderText({\n    current_cost &lt;- sum(current_usage) * 0.15  # Assuming $0.15 per kWh\n    plan1_cost &lt;- plan1_total() * 0.15\n    plan2_cost &lt;- plan2_total() * 0.15\n    \n    sprintf(\n      \"Current annual cost: $%.2f\\nPlan 1 annual cost: $%.2f (savings: $%.2f)\\nPlan 2 annual cost: $%.2f (savings: $%.2f)\",\n      current_cost,\n      plan1_cost,\n      current_cost - plan1_cost,\n      plan2_cost,\n      current_cost - plan2_cost\n    )\n  })\n}\n\nshinyApp(ui, server)"
  }
]